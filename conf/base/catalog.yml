# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html

#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataSet
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataSet
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataSet
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html
#
# This is a data set used by the "Hello World" example pipeline provided with the project
# template. Please feel free to remove it once you remove the example pipeline.

example_iris_data:
  type: pandas.CSVDataSet
  filepath: data/01_raw/iris.csv

ChIP_original_wrong_cols:
   #metadata: File with one extra tab after chromosome end
   type: pandas.CSVDataSet
   filepath: "data/01_raw/__FIXED_header_inherent_normalization__merge_normalized_hg19.txt"
   load_args:
       sep: "\t"
       
sample_covs:
    type: pandas.ExcelDataSet
    filepath: "data/01_raw/ChIP_Seq_samples_demographics_qc_stats_master_111519_1.xlsx"
    load_args:
        sheet_name: "All_good_libraries"

sample_covs_cleaned_inherent_samples_only:
    type: pandas.CSVDataSet
    filepath: "data/02_intermediate/inherent_norm_sample_covs.tsv"
    load_args:
        sep: "\t"
    save_args:
        sep: "\t"

ChIP_correct_cols:
   #metadata: File with one extra tab after chromosome end
   type: pandas.CSVDataSet
   filepath: data/02_intermediate/ChIP_correct_cols_102_samples_655_505_peaks.tsv
   load_args:
       sep: "\t"
   save_args:
        sep: "\t"
        
# ChIP_correct_cols_transposed:
#    #metadata: File with one extra tab after chromosome end
#    type: pandas.CSVDataSet
#    filepath: data/02_intermediate/ChIP_correct_cols_102_samples_655_505_peaks_transposed.tsv
#    load_args:
#        sep: "\t"
#    save_args:
#         sep: "\t"

important_covs_and_cc_status:
   type: pandas.CSVDataSet
   filepath: data/03_primary/important_covs_and_cc_status.tsv
   load_args:
       sep: "\t"
   save_args:
        sep: "\t"
        
important_covs_and_cc_status_dummified:
   type: pandas.CSVDataSet
   filepath: data/04_feature/important_covs_and_cc_status_dummified.tsv
   load_args:
       sep: "\t"
   save_args:
        sep: "\t"

ML_X_y_matrix:
   type: pandas.CSVDataSet
   filepath: "data/05_model_input/ML_X_y_matrix.tsv"
   load_args:
       sep: "\t"
   save_args:
        sep: "\t"